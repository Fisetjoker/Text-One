//1
int binary_search(int arr[],int k,int sz)//这里的arr本质上是一个指针
{
	int left = 0;
	int right = sz - 1;
	while (left<=right)
	{
	   int mid = (left + right) / 2;//中间元素的下标
       if (arr[mid]<k)
	    {
		   left = mid + 1;
	    }
	   else if (arr[mid]>k)
	    {
		   right = mid - 1;
	    }
	    else
	    {
		   return mid;
	    }
	}
	return -1;
}
int main()
{//二分查找有序数列
	int arr[] = {1,2,3,4,5,6,7,8,9,10};
	int k = 8;
	int sz = sizeof(arr) / sizeof(0);
	int ret = binary_search(arr,k,sz);
	if (ret==-1)
	{
		printf("找不到指定数字\n");
	}
	else
	{
		printf("找到的数字下标：%d\n",ret);
	}
}

//2
int menu()
{//猜数字游戏
	char arr1[] = "*************************";
	char arr2[] = "***** 1.play  0.exit ****";
	char arr3[] = "*************************";
	printf("%s\n%s\n%s\n",arr1,arr2,arr3);
	return 0;
}
int game()
{
  //1.生成一个随机数
	int ret;
	int geuss;//接收猜的数字
	ret = rand()%100+1;//生成的随机数范围是1-100之间
  //2.猜数字
	while (1)
	{
		printf("猜猜数字：");
		scanf("%d",&geuss);
		if (geuss>ret)
		{
			printf("猜大了\n");
		}
		else if (geuss<ret)
		{
			printf("猜小了\n");
		}
		else
		{
			printf("恭喜你，猜对了！\n");
			break;
		}
	}
	return 0;
}
int main()
{//猜随机数
	int input = 0;
	srand((unsigned int)time(NULL));//时间戳来设置随机数的生成起始点
  //time time(time_t *time)
 
	do
	{
		menu();
		printf("请选择：");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			game();
			break;
		case 0:
			printf("退出游戏");
			break;
		default:
			printf("输入的数字错误");
			break;
		}
	} while (input);
	return 0;
}
